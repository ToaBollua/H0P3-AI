import { IPhysics } from "../physics/engines";
import { EPhysicsCtx } from "../physics/settings";
import { Vec3 } from "vec3";
import { BaseSimulator } from "./baseSimulator";
import { IEntityState } from "../physics/states";
export declare class BasicSim<State extends IEntityState = IEntityState> extends BaseSimulator<State> {
    readonly ctx: IPhysics;
    constructor(ctx: IPhysics);
    simXTicksPrebuilt(ctx: EPhysicsCtx<State>, world: any, ticks: number): State;
    simUntilOnGroundPrebuilt(ctx: EPhysicsCtx<State>, world: any, ticks?: number): State;
    simUntilDestinationPrebuilt(ctx: EPhysicsCtx<State>, destination: Vec3, world: any, ticks?: number): State;
}
